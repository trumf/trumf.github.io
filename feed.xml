<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xml:base="https://rosenqvist.design"
    xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Rosenqvist Design</title>
        <link>https://rosenqvist.design</link>
        <atom:link href="https://rosenqvist.design/feed.xml" rel="self" type="application/rss+xml" />
        <description>A personal website and blog.</description>
        <language>en</language>
        <item>
            <title>RSS Feed Test Post</title>
            <link>https://rosenqvist.design/blog/rss-test/</link>
            <description>&lt;h1&gt;This is a test of the RSS feed&lt;/h1&gt;
&lt;p&gt;This is some test body content to verify that the RSS feed is working correctly after we fixed the plugin installation issues.&lt;/p&gt;
&lt;p&gt;If you can see this post in your RSS reader, then everything is working as expected!&lt;/p&gt;
&lt;p&gt;The RSS feed should be available at: &lt;a href=&quot;https://rosenqvist.design/feed.xml&quot;&gt;rosenqvist.design/feed.xml&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Test Content&lt;/h2&gt;
&lt;p&gt;Here&#39;s some additional content to make sure the feed has enough text to work with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a bullet point&lt;/li&gt;
&lt;li&gt;Another test item&lt;/li&gt;
&lt;li&gt;Testing RSS functionality&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post should appear in both the blog index and the RSS feed once everything is working correctly.&lt;/p&gt;
</description>
            <pubDate>Sun, 01 Jun 2025 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/rss-test/</guid>
        </item>
        <item>
            <title>11ty RSS Feed Setup: Three Plugin Problems and How I Fixed Them</title>
            <link>https://rosenqvist.design/blog/adding-rss-11ty/</link>
            <description>&lt;p&gt;I&#39;ve been following RSS feeds since probably the late oughts so when I moved this site into 11ty I of course wanted to have my own feed. What started as a simple plugin install turned into a debugging process involving dependency management, configuration conflicts, and deprecated APIs.&lt;/p&gt;
&lt;p&gt;I had planned to create my own feed and really dig into how the format works and how to put it together but after a quick look and thinking about how i wanted to spend my evenings i decided to just search for a ready made solution. Just searching &amp;quot;11ty rss&amp;quot; led me to this page &lt;a href=&quot;https://www.11ty.dev/docs/plugins/rss/&quot;&gt;https://www.11ty.dev/docs/plugins/rss/&lt;/a&gt; and it seemed easy enough.&lt;/p&gt;
&lt;h2&gt;Setting Up the 11ty RSS Plugin: Two Installation Methods&lt;/h2&gt;
&lt;p&gt;I&#39;ll be honest - these issues were probably caused by using AI to install the plugin. I fed Claude the readme file and the docs and asked it to help me set it up. It gave me some straightforward steps: install the plugin with &lt;code&gt;npm install @11ty/eleventy-plugin-rss&lt;/code&gt;, then I got a choice between an easy way and a harder way. Option 1 was using a virtual template where you just add configuration to your Eleventy config file. Option 2 was the manual template method with more control where you add the plugin in your config file and create feed template files in your project directory.&lt;/p&gt;
&lt;p&gt;I went with the &amp;quot;easy&amp;quot; option first, and that&#39;s where I ran into problems.&lt;/p&gt;
&lt;h2&gt;Issue #1: &amp;quot;Trying to convert to absolute url with base undefined&amp;quot; Error&lt;/h2&gt;
&lt;p&gt;The first problem showed up as these debug messages: &amp;quot;Trying to convert &#39;/blog/&#39; to be an absolute url with base undefined and failed.&amp;quot; Despite having properly configured &lt;code&gt;metadata.url&lt;/code&gt; in the site&#39;s metadata file, the RSS plugin just refused to generate the feed.xml file. I tried everything - setting the &lt;code&gt;base&lt;/code&gt; URL directly in plugin options, wrapping it in a nested &lt;code&gt;metadata&lt;/code&gt; object, double-checking the metadata.json configuration. Nothing worked.&lt;/p&gt;
&lt;p&gt;Eventually I had Claude dig into the plugin&#39;s source code and found this comment in &lt;code&gt;absoluteUrl.js&lt;/code&gt;: &amp;quot;This is deprecated! Use the Eleventy HTML &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; plugin instead (2.0+)&amp;quot;. Turns out the plugin had evolved way beyond the configuration approaches I were trying, creating this mismatch between what I expected and what actually worked.&lt;/p&gt;
&lt;h2&gt;Issue #2: Duplicate Plugin Configuration in .eleventy.js&lt;/h2&gt;
&lt;p&gt;When I looked at the .eleventy.js file, there were several issues. There was a proper import statement at the top: import eleventyRssPlugin from &amp;quot;@11ty/eleventy-plugin-rss&amp;quot;; but then later in the file there was an unexpected duplication with another copy of the same import statement and a competing plugin configuration block with different settings. Two plugin registrations fighting each other, each with conflicting configurations. The file structure was so mangled that every time I tried to edit it, it just failed.&lt;/p&gt;
&lt;p&gt;At this point I switched to option 2 - the manual template method. Instead of wrestling with all these interconnected problems, I created a &lt;code&gt;feed.njk&lt;/code&gt; template with direct control over feed generation. Set the proper permalink to &lt;code&gt;/feed/feed.xml&lt;/code&gt;, used &lt;code&gt;metadata.url&lt;/code&gt; directly to construct absolute URLs, applied the &lt;code&gt;htmlToAbsoluteUrls&lt;/code&gt; filter for content processing, and excluded the template from collections to avoid circularity.&lt;/p&gt;
&lt;h2&gt;Issue #3: RSS Plugin Installed in devDependencies Instead of dependencies&lt;/h2&gt;
&lt;p&gt;And even when I thought I had the configuration issues sorted out, this recurring problem kept happening every few days where the RSS plugin would mysteriously stop working. I&#39;d clear the npm cache and it would work again temporarily, but then break again a few days later. Turns out the plugin had been installed in &lt;code&gt;devDependencies&lt;/code&gt; instead of &lt;code&gt;dependencies&lt;/code&gt;. Node.js prioritizes &lt;code&gt;dependencies&lt;/code&gt; over &lt;code&gt;devDependencies&lt;/code&gt; during module resolution, and npm kept getting confused about where to find the package. So while clearing the cache would fix it temporarily, the fundamental problem was that the package wasn&#39;t where the system expected it to be.&lt;/p&gt;
&lt;h2&gt;Additional Fix: Changing feed.xml Output Path Configuration&lt;/h2&gt;
&lt;p&gt;There was one more gotcha though. The &lt;code&gt;/feed/feed.xml&lt;/code&gt; path was something that just happened when using the LLM to help install it, and at first it seemed like that was the only way it could work. Whenever I tried to change it I just got an error. Turns out the fix was to change both the outputPath in the config (which I had tried) AND also change it in the feed.njk template itself (which I hadn&#39;t tried).&lt;/p&gt;
&lt;h2&gt;Lessons Learned: 11ty RSS Plugin Best Practices&lt;/h2&gt;
&lt;p&gt;Looking back, this whole saga taught me a few things. First, Eleventy plugin APIs evolve, and older configuration patterns can become deprecated without much fanfare. Second, build tools are really sensitive to duplication and conflicting settings. And finally, sometimes when plugin complexity exceeds the benefit, just rolling your own template gives you way more control.&lt;/p&gt;
&lt;p&gt;The combination of issues was particularly frustrating - the plugin had evolved its URL handling approach making older configuration methods ineffective, the dependency classification issue wasn&#39;t obvious, and the configuration conflicts made everything worse. The recurring nature of that dependency issue was particularly annoying because clearing the cache would fix it temporarily, so I kept thinking I&#39;d solved it when I really hadn&#39;t.&lt;/p&gt;
&lt;p&gt;So I got it working and this post is mostly just a way for me to get rid of the frustration by writing it down. I will say that although the whole issue was probably caused by getting help from an LLM, it was also how it got solved. I would never have gone into the source code to find the deprecated comment, but I could just tell Claude to dig into it and it found the issue pretty quickly.&lt;/p&gt;
&lt;p&gt;If you want to see the feed for yourself you can find it here: &lt;a href=&quot;https://rosenqvist.design/feed.xml&quot;&gt;rosenqvist.design/feed.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt; As I&#39;m writing this, the plugin issue still occasionally resurfaces - the &lt;code&gt;@11ty/eleventy-plugin-rss&lt;/code&gt; import sometimes fails and requires reinstalling the plugin and clearing npm cache. It seems to be related to some dependency resolution quirks, but the workaround is now familiar: &lt;code&gt;npm uninstall @11ty/eleventy-plugin-rss&lt;/code&gt;, &lt;code&gt;npm install @11ty/eleventy-plugin-rss&lt;/code&gt;, &lt;code&gt;npm cache clean --force&lt;/code&gt;. The RSS feed itself seems to work once the plugin is properly installed, but I cant figure out why it needs constant reinstall...&lt;/p&gt;
</description>
            <pubDate>Sun, 01 Jun 2025 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/adding-rss-11ty/</guid>
        </item>
        <item>
            <title>UX Design&#39;s Role in the Automotive Sales Lifecycle</title>
            <link>https://rosenqvist.design/blog/ux-sales-lifecycle/</link>
            <description>&lt;h2&gt;UX Design&#39;s Role in the Automotive Sales Lifecycle&lt;/h2&gt;
&lt;p&gt;It is quite common that design leaders have trouble justifying the expense of a UX department and the work they do. A lot of of UX work is, in a way, supportive. Since it contributes to outcomes but is (often) dependant on other professions it is important that you are strategic about what value the UX team brings and what their role is.&lt;/p&gt;
&lt;p&gt;These are my half-baked ideas around how the UX team can contribute to the business here. and yes, the focus is on the business side. I&#39;ve never met anyone who don&#39;t think UX designers make a product better for the customer but i&#39;ve seen people question what effect it has on the bottom line.&lt;/p&gt;
&lt;p&gt;Lots of this comes from an article i read a long time ago that were talking about a mobile games company and their business strategy. It was a simple strategy with very clear roles where the marketing department were responsible for acquisition and the engineering (along with game designers) where responsible for retention.&lt;/p&gt;
&lt;p&gt;They built their products as a feedback loop where essentially more people buying their game meant more money meant more marketing which meant more people buying their games. The role of engineering, product, ux was essentially to get them to pay for another month of the game and thereby lower the cost of acquisition.&lt;/p&gt;
&lt;p&gt;The article contained more details than that but this idea was so straight forward and we had a discussion about UX research and UX design earlier this week, and I wanted to write down my perspective on how UX design and research can contribute to a product. This is written with the background of automotive HMI design but can be applied to any industry.&lt;/p&gt;
&lt;h2&gt;The Customer Lifecycle Model and Product Strategy&lt;/h2&gt;
&lt;p&gt;You&#39;ve probably heard of the sales funnel before (the blue part in most lifecycle diagrams). After a customer makes a purchase, we enter what&#39;s called the &amp;quot;post-purchase funnel&amp;quot; or customer journey.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/ux-sales-lifecycle/ux-lifecycle.png&quot; alt=&quot;Sales lifecycle model diagram showing a blue sales funnel on the left with multiple stages flowing into green post-purchase phases along the bottom. Curved arrows connect the phases showing customer progression from initial purchase through onboarding, engagement, retention, advocacy, and reactivation. The diagram illustrates how customers move through the traditional sales funnel and then continue through the post-purchase customer journey cycle.&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The sales funnel is typically managed by marketing and sales departments, but it&#39;s in the post-purchase phase where UX design can have the most significant impact. The ultimate goal is to sell more cars, and UX can contribute by creating advocates and enabling reactivation. To achieve this, customers need to feel they&#39;re receiving the value they expected from their purchase—or even more value than they anticipated.&lt;/p&gt;
&lt;h2&gt;Optimizing the Post-Purchase Customer Journey&lt;/h2&gt;
&lt;h3&gt;Onboarding: The Foundation of Value&lt;/h3&gt;
&lt;p&gt;The post-purchase funnel begins with onboarding, which enables all the value in subsequent phases. In automotive, this means ensuring users understand everything they need to operate their car effectively—how to charge it, how to set up their music and navigation systems, and so on. UX can make a substantial impact by making these processes intuitive for first-time users.&lt;/p&gt;
&lt;h3&gt;Engagement: Measuring Active Usage&lt;/h3&gt;
&lt;p&gt;Engagement is crucial if you&#39;re building an app, typically measured through Daily Active Users (DAU) or Monthly Active Users (MAU). You can also measure engagement on a per-feature basis, such as &amp;quot;how many people are using our search feature.&amp;quot; UX contributes here by making features easy to use, which is often what usability testing aims to address.&lt;/p&gt;
&lt;h3&gt;Retention: Keeping Users Coming Back&lt;/h3&gt;
&lt;p&gt;Retention occurs when people continue using the product over time. It&#39;s often seen as a result of good onboarding and effective value delivery, among other factors. For subscription products, retention literally pays the bills. With cars, which are typically one-time purchases, retention helps with advocacy and maintains high resale values in secondhand markets, making the car a better investment. UX has a significant impact on retention—if users are constantly frustrated by something in the car, they&#39;ll start looking for alternatives.&lt;/p&gt;
&lt;h3&gt;Advocacy: Turning Users into Promoters&lt;/h3&gt;
&lt;p&gt;Advocacy happens when people speak positively about the brand. Bugs and difficult-to-use features prevent people from becoming advocates or can even turn them against the brand. Advocacy is directly tied to the quality of the user experience.&lt;/p&gt;
&lt;h3&gt;Reactivation: Building Brand Loyalty&lt;/h3&gt;
&lt;p&gt;Reactivation occurs when someone makes repeat purchases from your brand. This is especially important in the automotive industry, where customers tend to stick with the same brand rather than switching. Once you get someone to buy a car, they&#39;ll likely purchase their next car from you as well. Customer loyalty to brands is more common in automotive compared to other industries.&lt;/p&gt;
&lt;h2&gt;UX&#39;s Role in the Sales Funnel&lt;/h2&gt;
&lt;p&gt;UX is also crucial during the sales funnel, particularly in the phases where customers are comparing options and showing interest. This is typically when they take test drives and evaluate common use cases. They also research cars online, making advocacy particularly important during this stage.&lt;/p&gt;
&lt;p&gt;From a design perspective, the most critical aspect of the sales funnel is avoiding unusable interfaces while creating something beautiful. Test drives don&#39;t last long, and customers are more likely to purchase if they find the car visually appealing.&lt;/p&gt;
&lt;h2&gt;The Aesthetic-Usability Effect&lt;/h2&gt;
&lt;p&gt;Products that look good are also perceived as easier to use—this is a well-documented phenomenon known as the Aesthetic-Usability Effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The aesthetic-usability effect refers to users&#39; tendency to perceive attractive products as more usable. People tend to believe that things that look better will work better — even if they aren&#39;t actually more effective or efficient.
&lt;a href=&quot;https://www.nngroup.com/articles/aesthetic-usability-effect/&quot;&gt;- NN group&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&#39;ve noticed in automotive that some people look down on designers who prioritize visual design. There&#39;s a perception that this approach prioritizes aesthetics over functionality. I think we need to let go of that false dichotomy. It prevents us from building better products and, honestly, during a test drive the visual design is what helps sell the car. Well-thought-through interactions help retain the customer, but the visual design sells it in the first place.&lt;/p&gt;
&lt;h2&gt;UX Design as Product Strategy Unifier: Creating Coherent Experiences Across Teams&lt;/h2&gt;
&lt;p&gt;One final thing that UX design really helps with, but is the hardest to measure, is the holistic impression of the product. When large organizations work on complicated products, they tend to get siloed. Often the UX team is the first team to notice that things will not fit together in the right way. Different teams have been working on different mental models and interaction patterns. One team might have taken it as an assumption that you should hide as much complexity as possible, while another believes it&#39;s better to be transparent about the complexity.&lt;/p&gt;
&lt;p&gt;When you suddenly need to create a front-end for these systems, you see how the systems don&#39;t match. What the UX team can help with, if they are included early enough, is to catch the most severe cases before they become costly problems. Another thing is to lay out the design strategy and formulate some basic guidelines and principles that help the organization build something coherent.&lt;/p&gt;
&lt;p&gt;This isn&#39;t directly connected to the customer lifecycle, but instead supports it and can help build a good product with a compelling story throughout the entire sales funnel and customer journey.&lt;/p&gt;
&lt;h2&gt;Building a Strategic UX Framework for Business Success&lt;/h2&gt;
&lt;p&gt;When we create product designs, they need to serve multiple strategic purposes: they must be usable for sustained user engagement, fit appropriately into the customer journey for retention optimization, and feature excellent UI design to encourage purchases in the first place. Understanding this balance is crucial for creating successful automotive user experiences that support the entire customer lifecycle and drive measurable business outcomes.
By connecting UX strategy to each phase of the customer journey—from initial attraction through onboarding, engagement, retention, advocacy, and reactivation—design teams can demonstrate clear business value and justify their strategic role in product development. This framework helps organizations build not just better products, but more profitable and sustainable customer relationships.&lt;/p&gt;
</description>
            <pubDate>Sun, 25 May 2025 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/ux-sales-lifecycle/</guid>
        </item>
        <item>
            <title>Moving the Blog to 11ty</title>
            <link>https://rosenqvist.design/blog/moving-to-11ty/</link>
            <description>&lt;h2&gt;Moving My Site to Eleventy: Streamlining for Writing and Future Projects&lt;/h2&gt;
&lt;p&gt;When I first started building my personal site, I made a deliberate choice to go with pure HTML and CSS. My goal to understand how everything fits together without any abstractions. I also saw myself making a lot of cool and unique layouts for each post. It started well, and I put together some posts (although without any amazing layouts). The experience was incredibly rewarding, and I learned a lot about layout, design principles, and the structure of web pages.&lt;/p&gt;
&lt;p&gt;But after the first couple of posts, it started to feel like a ton of work every time I wanted to put a blog together. It drained my motivation, and even though I learned a lot, I feel like what is holding me back right now is the ability to put pen to paper and actually write things down.&lt;/p&gt;
&lt;h2&gt;Why 11ty?&lt;/h2&gt;
&lt;p&gt;The goal was to make the writing process easier, and after looking around a bit, I decided to switch to 11ty. 11ty (or Eleventy) is a static site generator that still lets me keep things simple but with much more efficiency. It handles templating, reusable components, and layout management. That means I can focus more on the actual writing and less on redoing basic page structures every time. Hopefully, it will allow me to focus more on the writing and remove some of the friction of creating posts.&lt;/p&gt;
&lt;p&gt;The transition wasn&#39;t too difficult. I asked Claude to help with the migration, and using Cursor, it didn&#39;t take too long to convert the blog posts into Markdown documents and create page templates, etc. I decided to remove some of the gradients I had added when I first made the site since they didn&#39;t feel as fresh now as they did back then. I also made it light-themed by default to improve readability. I want to shift the focus away from the portfolio towards the blog, so I wanted it to be nicer to read.&lt;/p&gt;
&lt;p&gt;I did run into some issues that are not quite resolved yet. Some of them had to do with the CSS: getting things to line up when using reusable components is a bit tricky. I might just remove the whole LLM-written responsive layout part and rewrite it myself.&lt;/p&gt;
&lt;p&gt;The biggest issue was getting things to work together with the server. Git is not my strong suit, and making sure the page is deployed from the right branch has been a pain. If you are reading this, it means I&#39;m on the right path to fixing it.&lt;/p&gt;
&lt;h2&gt;Next Steps: Posting more, RSS Feed, and Portfolio updates&lt;/h2&gt;
&lt;p&gt;Now that the site structure is more manageable, the next step is to write more consistently and set up an RSS feed. I want to build the RSS feed from scratch, similar to how I initially built my site. I know I could just use a plugin or a pre-built solution, but I think there&#39;s value in understanding the mechanics behind it. Building things from the ground up gives me deeper insight into how they work. I&#39;ve done this before with my original site build, and it really helped my understanding.&lt;/p&gt;
&lt;p&gt;I&#39;m also planning to update the portfolio. This is always a challenge, given the nature of the automotive industry. Long lead times and the breadth of responsibilities make it tricky to create the clean, singular case studies that typically look good in a portfolio. It&#39;s something I need to work through and find a way to present that feels both authentic and engaging.&lt;/p&gt;
&lt;h2&gt;Moving Forward&lt;/h2&gt;
&lt;p&gt;So that&#39;s where I&#39;m at right now. The focus is on building momentum with writing, updating my portfolio, and setting up an RSS feed. I also have a ton of side-projects running in parallel that I really should start posting about. I&#39;m excited to see where this next phase takes me and if I can keep the motivation alive.&lt;/p&gt;
</description>
            <pubDate>Sun, 11 May 2025 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/moving-to-11ty/</guid>
        </item>
        <item>
            <title>AI hardware products</title>
            <link>https://rosenqvist.design/blog/why-ai-hardware/</link>
            <description>&lt;p&gt;I&#39;ve been confused about why we have seen hardware AI products pop up. Earlier this year there was quite a lot of buzz around the &lt;a href=&quot;https://www.rabbit.tech/rabbit-r1&quot;&gt;Rabbit r1&lt;/a&gt;. The fun design from teenage engineering together with hitting the peak of the AI hype made me interested. Even though I wasn&#39;t super excited about buying it or really understood what it was for I wanted to know more.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;https://humane.com/aipin&quot;&gt;AI pin&lt;/a&gt; was another product that was insanely hyped at the beginning of the year. It&#39;s a small device that you can attach to your shirt. It functions as an assistant who can help you remember things, put things in the calendar, buy things.&lt;/p&gt;
&lt;div class=&quot;responsive-video&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/TitZV6k8zfA?si=gCgmw7z0EZKPzYFb&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;The AI pin blew up in a spectacular way with a review from Markus. It even started a discourse about if the reviewers have a responsibility to not make to harsh a review since it can kill a company before they even get started. (My worry is that reviewers get even more gagged than they already are. They should be critical and guide consumers to good purchases. The critique came mostly from, by what I saw, the type of tech optimist that I mostly see on twitter. If a company don&#39;t think the product is ready then they should hold the release until it is. And trust me I know that is a hard decision to make but I they don&#39;t they shouldn&#39;t be surprised when their stock tanks.). The Rabbit was less dramatic but it didn&#39;t escape harsh reviews and also got a lot of flack when it came to light that the people behind it were &lt;a href=&quot;https://www.wheresyoured.at/rabbit-holed/&quot;&gt;NFT and crypto grifters&lt;/a&gt; that had pivoted to AI last year.&lt;/p&gt;
&lt;p&gt;Both these events left me thinking &amp;quot;Why?&amp;quot;. And there were so many why&#39;s: Why did they decide to build a Hardware product in the first place? Why did they decide to release them when they were so underperforming? Why did so many people think it was such a good idea? Why are we so excited for &amp;quot;assistants&amp;quot;?&lt;/p&gt;
&lt;h2&gt;Why hardware?&lt;/h2&gt;
&lt;p&gt;There is a really &lt;a href=&quot;https://x.com/jaykapoor24/status/1785940555471659429?s=12&quot;&gt;funny clip&lt;/a&gt; from one reviewer of the rabbit where they talk about how they would redesign it. First they would remove the jockey wheel, then they would make it smaller with the edge all he way to the screen… by the end they have a smartphone with a rabbit logo. I was thinking the same thing. I wondered: If the selling point is the &amp;quot;assistant&amp;quot; functionality, which is all software, why go through the effort of making a hardware thing? Why not spend the time and money on building up the assistant capability which is not an easy thing to do and something they didn&#39;t manage to take care of?&lt;/p&gt;
&lt;p&gt;My half baked ideas for why:&lt;/p&gt;
&lt;p&gt;Maybe they were hoping to make back some investment by the selling the hardware. They would sell the hardware with enough margin to give them cashflow while they continued building the software. The AI pin needs a subscription to work but the rabbit was sold as is with no mention of a subscription. I don&#39;t know what their plan was since it seems like it would be hard to maintain growth (because lets be clear that these companies where built on the Silicon Valley model of funding that require exponential growth. Or maybe the rabbit wasn&#39;t, I&#39;ve no idea what their business plan looks like, but I wonder where they got the funding from if it wants this model) by selling a 200$ gadget.&lt;/p&gt;
&lt;p&gt;The second reason I can think of is that they wanted to build some kind of a moat. With Google, OpenAI, Meta, as well as newer companies like Hugging Face and Anthropic all building foundational models and the infrastructure to build solutions on top of them (like GPTs, Agents, RAGs) it will be hard to compete. You can try to build an assistant, which is close to the standard chat interface of these models, and fight against some of the biggest companies in the world to create a better product. Or maybe you build a hardware gadget that can be used to access these models. Maybe the form factor of your hardware is so nice to use that customers stay with your gadget and pay to allow their assistant to be housed in it… Was that the bet? &lt;a href=&quot;https://interconnected.org/home/2024/01/26/hardware&quot;&gt;Its really hard to build a product category&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Maybe the simple reason is that it is much easier to sell a device to an end customer than a subscription? People are reluctant to pay for software and it is much easer to sell B2B solutions. But a device might make people open their wallet? Maybe this is not Spotify, it is a vinyl record that you can hold and display and show your friends?&lt;/p&gt;
&lt;h2&gt;What&#39;s up with assistants?&lt;/h2&gt;
&lt;p&gt;I mean, I get it. I have a bunch of things I would like to get done and it would be great if someone could them for me. The thing is that most of the things I personally want to get done you need a body to do. I need to do the dishes and put away the laundry, the living room could use some tidying up. At most an AI assistant can assist me by making a TODO list.&lt;/p&gt;
&lt;p&gt;What about the things you do online? I&#39;m not happy about letting my browser know my location, handing over my login information to companies that recently was deeply involved with crypto seems like a bad idea. I don&#39;t think they have my best interest in mind. Since I struggle to make it through buying a plane ticket without adding extra costs you might understand why I wouldn&#39;t want an AI to pay my bills in 2024. I require a lot more hands on control. Did we, collectively, think that the AIs would be so good during this year that we would be happy to let them handle our online accounts?&lt;/p&gt;
&lt;p&gt;There are quite a few companies that have started selling automated messages for social media accounts. But that is mostly for business accounts or a personal account that is run like a business. The type of account where you need to post several times a day to stay relevant. It&#39;s very different from the personal, private, assistant that the AI pin and Rabbit R1 claim to be.&lt;/p&gt;
&lt;p&gt;The reason I started writing this post was because I read this blog about &lt;a href=&quot;https://fasterandworse.com/complicated-sticks/&quot;&gt;&amp;quot;Complicated Sticks&amp;quot;&lt;/a&gt;. The theses is that these hardware assistants are a type of complicated stick. You could potentially do anything with a stick. The potential is the attractive part. You are buying the potential to have a magic stick that can help you book a trip, not the actual ability to do it.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/why-ai-hardware/</guid>
        </item>
        <item>
            <title>How has the role of the UX designer changed?</title>
            <link>https://rosenqvist.design/blog/ux-profession/</link>
            <description>&lt;p&gt;When I first learnt about ux design it was a role that did everything. Your job was to do research, make wireframes, hold workshops, make pixel perfect designs. It was a role where you needed to be able to talk with business people in business way, engineers in an engineering way, and with other designers. To me it seemed like daunting amount of skills you had to master.&lt;/p&gt;
&lt;p&gt;When I actually started working i saw that the research role and the designer role was often split. It makes sense to me. Both of these roles takes a long time to become good at and they also the tasks for each role require a lot of time.&lt;/p&gt;
&lt;p&gt;As time went on I saw more and more roles become popular. You had UX writers and then soon after that you had content designers. Graphical designers first became UI designers, then UX /UI designers and then maybe they started doing motion design when the big platforms started pushing video. And of course the design system designer.&lt;/p&gt;
&lt;p&gt;As tech grew bigger and bigger there were more roles to fill. At big tech there were opportunities to niche yourself so you were both employable and able to focus on the of work that you enjoyed the most.&lt;/p&gt;
&lt;p&gt;Today people are getting laid off left and right and the niches are disappearing. When your company suddenly need to &amp;quot;down-size&amp;quot; specialized roles are often the first to go.&lt;/p&gt;
&lt;p&gt;I want to understand what niches might stick around but first we need to take a look backwards.&lt;/p&gt;
&lt;h2&gt;Were there as many niched roles before the dotcom crash?&lt;/h2&gt;
&lt;p&gt;It seems to me that thee were a couple of strands that ended up being lumped into the UX designer role.&lt;/p&gt;
&lt;p&gt;The first strand come from the marketing agencies. In the 90s the internet exploded and the people who had previously done print design, graphic designers, suddenly got a new medium to work in. Over time we have seen a constant exchange, both ways, between marketing agencies and big tech. Graphic designers have today become (in many instances) brand designers. We have also added motion designers to this mix.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/ux-profession/marektingroles.png&quot; alt=&quot;diagram with the roles that came from marketing&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Another strand we see from 80s marketing agencies are copy writers. Copy writers have branched out into UX writing and then content designers.&lt;/p&gt;
&lt;p&gt;The second big influence comes from engineering. If you were a programmer with a knack for figuring out edge cases on the front end you might start to call yourself Interaction designer. We also get a big influx from the ergonomics. Early usability material uses a lot of similar methods as ergonomics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/ux-profession/programmerroles.png&quot; alt=&quot;Diagram of the roles that came from programmers&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The third one is researchers. Often from behavioral science. Interviews and and observations are staple methods in research. It&#39;s not surprising that academics wanted to see what it was like outside of the university and design was a good place to go. We are mostly talking about qualitative researches, maybe a few who are good at surveys. When i was going through textbooks about research for design it was mostly qualitative methods. Sometimes more quantitative methods were used but since the number of participants generally low and descriptive statistics was enough. I&#39;ve never read anything about how qualitative research was/is used in marketing agencies but if you have any suggestions please let me know.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/ux-profession/researchroles.png&quot; alt=&quot;Diagram of the roles that came from researchers&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The last strand I&#39;ve seen is from the &amp;quot;consultant&amp;quot; industry. By that I mean IDEO and the ideas they promoted. A while ago it struck me that IDEO never talks to designers, they are always talking to mangers and directors without a design background. I can&#39;t identify a particular role that comes from this influence but they have given us a lot of ideas and ideological baggage. I&#39;m thinking of the workshop methods and of course the design thinking courses. There are more agancies than IDEO of course but I feel they exemplify this kind of influence.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/ux-profession/Allroles.png&quot; alt=&quot;Diagram with all the roles that have been discussed&quot; /&gt;&lt;/p&gt;
&lt;p&gt;I think I need to stop here for the sake of time and come back to the more current roles in design. As I said in the beginning I don&#39;t have any sources for this and I&#39;m more trying to describe a vibe than actual facts.&lt;/p&gt;
&lt;p&gt;If you were around for the dotcom crash i would love to hear how things looked before and after and if you have seen the same influences that i have.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/ux-profession/</guid>
        </item>
        <item>
            <title>The Evolution of UX Design</title>
            <link>https://rosenqvist.design/blog/ux-design-evolution/</link>
            <description>&lt;p&gt;I&#39;m trying to figure out how to deal with all the layoffs in tech and for UX designers. I&#39;m writing this for myself, to myself, to figure out my thoughts where UX design have been and where it&#39;s going and how I can advise the more junior designers on my team.&lt;/p&gt;
&lt;p&gt;As you may know I&#39;m trying to get an overview for myself on the current state of UX. &lt;a href=&quot;https://rosenqvist.design/blog/ux-design-evolution/UXproffesion.html&quot;&gt;Last time&lt;/a&gt; I wrote about all the different roles that got incorporated under &amp;quot;UX Design&amp;quot; by the time I started getting into it. Today I will try to sketch out some current developments.&lt;/p&gt;
&lt;h2&gt;Graphic designers became brand designers&lt;/h2&gt;
&lt;p&gt;I will keep this brief since I mostly work in large enterprise environments and don&#39;t often come in contact with this type design. It seems like there has been a shift to calling yourself Brand designer for may of the people who might earlier have been graphic designers. I&#39;m guessing that there were more and more customers out there that wanted things like logos and other brand assets and slowly people just started calling themselves brand designers. This group of people work as freelancers or in agencies more often than the other groups.&lt;/p&gt;
&lt;h2&gt;UX designers became Product designers&lt;/h2&gt;
&lt;p&gt;UX designers have always had it tricky to justify themselves. There have been a lot of discourse about how designers should change. &amp;quot;You need to learn about business&amp;quot;/&amp;quot;you need to learn how to code&amp;quot; and I don&#39;t know how many articles I&#39;ve read about showing ROI of design. I think that if you were leaning more towards the business side you started calling yourself a product designer in 2020 and if you liked to code then you might slowly be moving into a design engineer role right now.&lt;/p&gt;
&lt;p&gt;Being a product designer I think also reflects the changing climate around design. Compared to the beginning of the 2010s we don&#39;t talk as much about representing users any more. We were maybe a bit idealistic back then and maybe right now we are a bit cynical and jaded (There seemed like there was a potential back then to work towards something larger than ourself and more important than a bottom line. That potential seems gone now). Today you need to justify yourself by showing how you improved various metrics that are important to the bottom line.&lt;/p&gt;
&lt;h2&gt;Design engineering&lt;/h2&gt;
&lt;p&gt;There have recently been some good articles written about the design engineer and what they do (&lt;a href=&quot;https://vercel.com/blog/design-engineering-at-vercel&quot;&gt;example&lt;/a&gt;, &lt;a href=&quot;https://blog.jim-nielsen.com/2024/the-case-for-design-engineers-pt-ii/&quot;&gt;example&lt;/a&gt;, &lt;a href=&quot;https://maggieappleton.com/design-engineers&quot;&gt;example&lt;/a&gt;). For the purpose of this post I lump in all kinds of &amp;quot;designers who code&amp;quot; under this category. I also put design system engineers/designers in this category. The design system have helped product designers enormously. In an enterprise environment it is not uncommon for product designers to drag and drop readymade components in Figma (sort of similar to wire framing) and this would not be possible without design systems.&lt;/p&gt;
&lt;p&gt;For a company of small or mid size I think it makes a ton of sense to hire someone who can sketch out an interface and then code it. In large companies it probably depends more on that particular organisation. There can be a lot of politics and protecting of ones turf which makes a design engineer a bit difficult to fit in. Unless they work in a design system team of course.&lt;/p&gt;
&lt;h2&gt;Product managers stepping in&lt;/h2&gt;
&lt;p&gt;Although PMs have a background from marketing they are one of those roles that really grew up when the FAANGs started using SCRUM and Agile. Today the PM role is often described as being the voice of the customer. This used to be something that UX designers would claim. Maybe they still do? But UX design seems to have de-emphised the research part of the profession as time has gone on. The nature of research have also changed: I see less and less discussion about qualitative research methods while there have been an explosion in quantitative techniques. PMs are more often seen looking at a dashboard of quantitative data rather than post its for a thematic analysis.&lt;/p&gt;
&lt;p&gt;These are the major ways I think the UX designer is evolving. I don&#39;t want to say that they are dissappearing but I believe the role was very broad from the beginning and it makes it hard to defend a role and a competency. I feel like we are moving toward a future with fewer UX design generalist and more product designers, PMs, Design engineers, and brand designers where the UX designer used to be. I feel like I need to put into words how this changes things and how you might stay ahead and ride this wave.&lt;/p&gt;
&lt;p&gt;I&#39;ll end here with a reminder that these are very subjective impressions backed up by nothing. If you have a different view or would like to comment then please reach out. It&#39;s easiest on &lt;a href=&quot;https://mastodon.social/@amalgam_&quot;&gt;mastodon&lt;/a&gt;. Thanks for reading.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/ux-design-evolution/</guid>
        </item>
        <item>
            <title>How to Become a Design Engineer as a Designer</title>
            <link>https://rosenqvist.design/blog/how-to-become-design-engineer/</link>
            <description>&lt;p&gt;Lately, I&#39;ve been writing more code both at work and on my own projects. It got me thinking—maybe I should understand the design engineer role better.&lt;/p&gt;
&lt;p&gt;A design engineer bridges design and engineering. They can design user interfaces and have the technical skills to code them. They often make prototypes in code, contribute to design systems, and take projects from concept to production, which is why I&#39;m interested in them.&lt;/p&gt;
&lt;h2&gt;Why Do Most Design Engineers Come from an Engineering Background?&lt;/h2&gt;
&lt;p&gt;One thing that struck me when reading about the role is that most design engineers come from a developer background, particularly frontend or web development. Many of the people in &lt;a href=&quot;https://maggieappleton.com/design-engineers&quot;&gt;Maggie Appleton&#39;s &amp;quot;collection of Design Engineers&amp;quot;&lt;/a&gt; seem to come from an engineering background. Design engineers often start by writing software and then transition into design. It&#39;s pretty rare to see someone move into it from a pure design background.&lt;/p&gt;
&lt;p&gt;As someone who comes from a design background, I think it is harder to move from design into a design engineering role than vice versa. I will lay out my position here and explain the hurdles you might face as a designer.&lt;/p&gt;
&lt;h2&gt;Learning to Code Isn&#39;t the Biggest Hurdle&lt;/h2&gt;
&lt;p&gt;Surprisingly, the actual programming part—writing HTML, CSS, maybe some JavaScript—isn&#39;t the hardest hurdle. There are tons of tutorials out there, and modern design tools are getting closer to how you&#39;d style components in code. On YouTube, you can find loads of tutorials, and if you prefer to read, there are some great blogs and reference sites like &lt;a href=&quot;https://developer.mozilla.org/en-US/&quot;&gt;MDN&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first real challenge is figuring out the tools. If you&#39;re a UX designer today, you&#39;re probably spending most of your time in Figma. As you move more towards engineering, you&#39;ll need to get used to new tools.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/how-to-become-design-engineer/figma%20ui.png&quot; alt=&quot;The figma UI, a common program for web and UI design&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Setting up an IDE like VS Code with some plug-ins doesn&#39;t take long but is very different from Figma. Then there&#39;s the whole environment setup and getting your head around version control systems like Git, where you&#39;ll have to type cryptic commands into a terminal just to get things running. For someone who&#39;s never touched the command line, that can be pretty intimidating. Especially for designers who haven&#39;t worked with version handling beyond naming files &amp;quot;final_design_v3_final.psd.&amp;quot;&lt;/p&gt;
&lt;h2&gt;How Things Work in the Real World&lt;/h2&gt;
&lt;p&gt;Next up is learning how things are done &amp;quot;in the real world.&amp;quot; Even if you&#39;ve studied hard and done a lot of personal projects, when you get to an enterprise environment, things are often done differently.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Say you&#39;re a new web developer on the job, and you&#39;re given a ticket to have a button open an informational popup for users to read for extra information. You have a solid grasp of the fundamentals, so you make a Pull Request where you implement this &lt;a href=&quot;https://frontendmasters.com/blog/popover-api-is-here/&quot;&gt;as a popover&lt;/a&gt; (e.g. &lt;code&gt;&amp;lt;div id=&amp;quot;extra-information popover&amp;gt;Extra information.&amp;lt;/div&amp;gt;&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Then the feedback arrives: … but that&#39;s not how it&#39;s done &lt;em&gt;here&lt;/em&gt;…&lt;/p&gt;
&lt;p&gt;At this job, with this current code base, you:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use the existing &lt;code&gt;&amp;lt;Popup /&amp;gt;&lt;/code&gt; element from the Design System.&lt;/li&gt;
&lt;li&gt;Keep the content in the &lt;code&gt;Copy&lt;/code&gt; package as HTML strings, so it can be translated.&lt;/li&gt;
&lt;li&gt;Make an enum for it (e.g. &lt;code&gt;export const POPOVER_EXTRA_INFORMATION = &amp;quot;POPOVER_EXTRA_INFORMATION&amp;quot;&lt;/code&gt;) so that anywhere that refers to this component or copy has a consistent name.&lt;/li&gt;
&lt;li&gt;Has a component test ensuring it functions correctly.&lt;/li&gt;
&lt;li&gt;Use special classes from the design system in order to create variations, rather than it&#39;s own bespoke styles.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;None of those things are really &amp;quot;fundamentals&amp;quot;, they are &lt;em&gt;conventions&lt;/em&gt; that this particular code base has grown into over time to make it manageable&lt;/p&gt;
&lt;p&gt;— &lt;a href=&quot;https://frontendmasters.com/blog/what-skills-should-you-focus-on-as-junior-web-developer-in-2024/&quot;&gt;What Skills Should You Focus on as Junior Web Developer in 2024?&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These conventions won&#39;t be in coding courses. Writing tests, code reviews, and engineering processes are areas where designers might struggle.&lt;/p&gt;
&lt;p&gt;This is an area where there&#39;s surprisingly little information out there. I&#39;m guessing it&#39;s the kind of trade knowledge that people just learn and don&#39;t feel the need to describe. The best resource I&#39;ve found are videos from &lt;a href=&quot;https://www.youtube.com/@WebDevCody&quot;&gt;webdevcody&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;responsive-video&quot;&gt;
    &lt;iframe src=&quot;https://www.youtube.com/embed/Dl-BdxNRUqs?si=vRQSQImf1iNL5rs8&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; referrerpolicy=&quot;strict-origin-when-cross-origin&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;h2&gt;The Biggest Hurdles Are Organizational&lt;/h2&gt;
&lt;p&gt;Honestly, the biggest challenges are organizational. You&#39;ll probably need to convince IT to give you admin access to install new programs. Getting access to repositories on GitHub or wherever means talking to the DevOps team or an engineering manager.&lt;/p&gt;
&lt;p&gt;You&#39;ll also need support from your manager to grow into this kind of role. They might not fully understand what you&#39;re trying to do, but their backing is crucial. You&#39;ll also need guidance from someone in engineering, which might slow things down as you learn on the job. Remember, you&#39;re essentially taking on a junior or intern dev role in addition to your designer role.&lt;/p&gt;
&lt;p&gt;If you&#39;re part of the design team but doing engineering work, you might end up out of sync with both sides. You could find yourself attending more meetings, trying to stay updated with both departments.&lt;/p&gt;
&lt;p&gt;When performance review time comes around, things can get even trickier. How will your manager assess your performance? If you don&#39;t fit neatly into the usual job descriptions or leveling guides, it might be hard for them to justify a raise or promotion, even if you&#39;ve made significant contributions. My only advice is to keep track of what you&#39;re doing and show how things would have been missed if you weren&#39;t there to catch them.&lt;/p&gt;
&lt;h2&gt;Is it easier for Engineers to move toward Design?&lt;/h2&gt;
&lt;p&gt;On the flip side, if an engineer wants to move toward design, it might be a bit easier. They can expand design specifications while still closing tickets. They don&#39;t need access to new tools and will still fit into the usual engineering org. They might take longer to finish tasks because they&#39;re spending more time on design, but that&#39;s a similar challenge designers face when they start coding.&lt;/p&gt;
&lt;p&gt;One thing I&#39;ve noticed is that learning resources for design aren&#39;t as comprehensive as those for coding. They often focus on how to use tools rather than teaching design principles. It&#39;s tough to find resources that delve into topics like advanced typography beyond the basics.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rosenqvist.design/blog/how-to-become-design-engineer/vscode-custom.png&quot; alt=&quot;The UI of Visual Studio code, a common program for editing and writing code&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;What to think about for Designers&lt;/h2&gt;
&lt;p&gt;If you&#39;re a designer wanting to become a design engineer, your best bet might be working freelance or at a smaller company. Startups are probably ideal since you&#39;d need to help out with a variety of tasks anyway.&lt;/p&gt;
&lt;p&gt;A design engineering role, like any hybrid role, works best if you already have trouble fitting into a mold. If you&#39;ve been working for a while as a designer, it can feel like starting over. You&#39;ll need to augment the skills you already have to stand out.&lt;/p&gt;
&lt;p&gt;Focus on areas where you can outperform a full-stack engineer. It could be animation, clever ways to handle design tokens, typography, or micro-adjustments to layout. Use your design eye to add final touches that make a difference.&lt;/p&gt;
&lt;h2&gt;Transitioning to Design Engineering is hard but possible&lt;/h2&gt;
&lt;p&gt;Making the transition from design to design engineering is challenging but definitely possible. It helps to be in an environment that supports your growth and understands the value you bring. Having managers and colleagues who back you up can make a huge difference.&lt;/p&gt;
&lt;p&gt;So, if you&#39;re thinking about making this move, be prepared for some obstacles, but know that it&#39;s achievable. And if you&#39;re already on this path, I&#39;d love to hear about your experiences.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/how-to-become-design-engineer/</guid>
        </item>
        <item>
            <title>How to adapt to AI as a Designer?</title>
            <link>https://rosenqvist.design/blog/design-and-ai/</link>
            <description>&lt;h2&gt;Jakob Nielsen and an &amp;quot;Urgency around AI&amp;quot;&lt;/h2&gt;
&lt;p&gt;Jakob Nielsen recently wrote that designers need to have urgency about AI. But what does that really mean for our profession, and how should we respond?&lt;/p&gt;
&lt;p&gt;Nielsen wrote &lt;a href=&quot;https://jakobnielsenphd.substack.com/p/ux-needs-a-sense-of-urgency-about&quot;&gt;a blog post&lt;/a&gt; declaring that designers need to have urgency about AI. When I first read this article, I was in the process of being let go from my job, and many of my design friends were at least being threatened with losing their jobs. Nielsen writes that designers need to learn AI but doesn&#39;t elaborate on what that would mean in practice. It left me with a vague anxiety and stress, and it&#39;s only now that I feel I have the energy to address it.&lt;/p&gt;
&lt;h2&gt;How Do You Use AI as a Designer?&lt;/h2&gt;
&lt;p&gt;When you search &amp;quot;Design and AI,&amp;quot; you&#39;ll find numerous articles describing how AI has helped designers build new apps and improve their workflow.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://uxplanet.org/how-i-use-chatgpt-as-a-ui-ux-designer-bcf22b3cb1c0&quot;&gt;this article&lt;/a&gt;, they outline how they created both the product design roadmap and the most important features using AI. They used ChatGPT to generate the site map and break down each screen. They even used AI to generate code.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://uxplanet.org/is-it-possible-to-create-an-entire-mobile-app-using-chatgpt-aa6000c357a8&quot;&gt;another article&lt;/a&gt;, designers discuss using AI image generators like Midjourney, DALL-E, and Stable Diffusion to mockup web design ideas. They also talk about how LLMs can be useful for research—both preparing questions, analyzing data, and querying data afterward. They also used AI for copywriting and to create initial personas for their app.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://medium.com/@ladzies/combining-ai-and-design-a-step-by-step-guide-467672926f15&quot;&gt;a third article&lt;/a&gt;, designers use AI for practically everything they need: creating personas, competitive analysis, transcribing user interviews, designing surveys, and generating moodboards.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The common theme across these articles is that AI is primarily used for the first steps of exploration and ideation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If designers generate a moodboard or an image for a hero section, they still need to use Photoshop to actually finish it. When they create a persona, they need to fill in real data. Currently, AI seems most valuable for speeding up the initial sketching phase and creating quick starting points. The final touches still require a skillful human hand.&lt;/p&gt;
&lt;h2&gt;What Does It Mean to &amp;quot;Learn AI&amp;quot;?&lt;/h2&gt;
&lt;p&gt;If this is how AI is being used, what skills do designers need to develop? &lt;a href=&quot;https://speckyboy.com/grumpy-designer-ponders-what-it-means-to-learn-ai/&quot;&gt;In this article&lt;/a&gt;, the &amp;quot;Grumpy Designer&amp;quot; discusses the skill of prompt engineering, suggesting that designers might be especially suited for it because it requires communication skills that designers supposedly excel at.&lt;/p&gt;
&lt;p&gt;I agree that right now, prompt engineering is important. You need to learn how each model behaves and discover the &amp;quot;magic words&amp;quot; that get it to do what you want. But as the field matures, this pain point is something model owners will try to fix quickly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Prompt engineering will not lead to job security.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A hard truth for designers to accept&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Being good at prompt engineering may be valuable in the near term, but I don&#39;t see it as a sustainable skill. It&#39;s also not very transferable—although you can learn some basic guidelines that apply universally, you&#39;ll need to learn specific prompt structures for each model or service.&lt;/p&gt;
&lt;p&gt;The article also suggests that building APIs on these models will be valuable. While I see potential in creating new services if you understand an AI model and its API, this isn&#39;t typically considered a core design skill. It either veers into a developer role (if you want to write the code that connects to these APIs) or into a more product-focused role. This requires designers to shift their skill set and potentially abandon traditional expertise in typography, color, and composition.&lt;/p&gt;
&lt;p&gt;The last piece of advice given is that designers should simply start using all these AI tools. But as we saw in the earlier examples, this knowledge isn&#39;t sustainable either. Understanding a model now won&#39;t be the same a year from now. If you use one model for a few months and come back later, you&#39;ll need to reacquire those skills. This knowledge has a very short expiration date.&lt;/p&gt;
&lt;h2&gt;So What Is a Designer to Do?&lt;/h2&gt;
&lt;p&gt;If you listen to some voices, especially on platforms like Twitter/X, it sounds like AI will replace everything—the entire design profession. But if you read about how designers are actually using AI, it&#39;s more accurate to say that AI is taking over specific tasks, or even phases of tasks. It&#39;s useful to remember that a design job requires many different skills to handle a variety of tasks.&lt;/p&gt;
&lt;p&gt;Both the Grumpy Designer article and various Forbes pieces suggest that designers should cultivate interpersonal connection and communication skills. In my experience, as you move from a junior position to a more senior one, you naturally shift from concrete &amp;quot;hard skills&amp;quot; to fuzzier &amp;quot;soft skills&amp;quot; as a manager or design lead. Senior designers typically spend more time in meetings and discussions rather than hands-on design work.&lt;/p&gt;
&lt;p&gt;Are we essentially telling all designers to move into leadership roles? A more practical issue is that, in my experience, we&#39;re not great at hiring for soft skills. There&#39;s no &amp;quot;LeetCode for soft skills&amp;quot; to objectively measure these capabilities.&lt;/p&gt;
&lt;h2&gt;To Sum Up&lt;/h2&gt;
&lt;p&gt;Becoming proficient with a specific AI service or mastering prompt engineering won&#39;t help with long-term job security. Learning to build applications and becoming a developer might offer more sustained relevance, but then you&#39;re abandoning your core competencies as a designer.&lt;/p&gt;
&lt;p&gt;The most sustainable approach may be to view AI as another tool in your design toolkit—one that can handle certain tasks more efficiently, allowing you to focus on the aspects of design that still require human creativity, empathy, and judgment.&lt;/p&gt;
&lt;p&gt;Rather than fearing AI or rushing to completely reinvent your skill set, consider how AI can augment your existing abilities and free you to focus on the more uniquely human aspects of design.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/design-and-ai/</guid>
        </item>
        <item>
            <title>Command line and prompt interfaces</title>
            <link>https://rosenqvist.design/blog/cli-and-prompts/</link>
            <description>&lt;p&gt;For last couple of decades, we have moved from CLI, the command line interface, to using more and more GUI. For most of us a graphical user interface is faster and it also makes it easier for designers to make functions easy to discover. Now we see a return to the CLI with generative AI we see a return to this prompt driven design.&lt;/p&gt;
&lt;h2&gt;Types of design for prompts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.felicis.com/news/prompt-driven-design&quot;&gt;This blog&lt;/a&gt; discusses the trend of prompt driven design. They identify three types of prompt design, navigational core, UX and API.&lt;/p&gt;
&lt;p&gt;An example of navigational UI is superhuman, the email app, where you use the keyboard to open and close emails and generally move around. I would add the Spotlight search feature as an example on Mac. The second type is Core UX and this is when the text input is the… core of the experience. An example is ChatGPT along with most of the new LLMs. The last example is APIs which make up the base for these other interfaces.&lt;/p&gt;
&lt;h2&gt;Accordion editing and Apple picking&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.nngroup.com/articles/accordion-editing-apple-picking/&quot;&gt;Nielsen Norman group&lt;/a&gt; has done some research on how people interact with prompts (and AIs) and found some interesting new behavior.&lt;/p&gt;
&lt;p&gt;LLMs will often generate something useful, a starting point, but not quite right. To make it better you ask it to write a bit more on a certain topic (expansion), or to reduce the text and shorten it to the most important parts (shrinking). The effect is that the text expands and shrinks as an accordion.&lt;/p&gt;
&lt;p&gt;They also saw participants do Apple picking. The text you generate might be pretty bad over all but there are good parts. You copy and paste the good parts somewhere else, picking the good apples. They make the point that today&#39;s tools are not really made for this kind of behavior. When writing, or using AI to write, you don&#39;t write everything in one go. You want to go back and edit certain paragraphs or pick out the good parts and paste them somewhere else.&lt;/p&gt;
&lt;p&gt;We are starting to see some concrete use-cases emerge around AI. The use case for AI is either to make something from scratch that can kick start your process. Change the style the text. Or Make a summary of some text so it is easier and quicker to understand.&lt;/p&gt;
&lt;p&gt;I myself often do this and I&#39;ve seen others talk about it on the Internet as well. If you want to write a longer piece of text, you first ask the AI to describe the different parts and write the first outline. Then you go back and ask it to expand on each section. Once you have a first draft you might move things around or re write certain parts. I often do a lot of text work in Figma because I can easily drag text around and find what I want to say. Supporting this kind of nonlinear way of working instead of this idea could be really powerful.&lt;/p&gt;
&lt;h2&gt;Examples of people doing this well&lt;/h2&gt;
&lt;p&gt;Lastly I want to highlight a project that is doing this in a very interesting way from &lt;a href=&quot;https://www.inkandswitch.com/&quot;&gt;Ink &amp;amp; Switch&lt;/a&gt;. Go and read their project notes on how they are trying to design for this new way of editing &lt;a href=&quot;https://www.inkandswitch.com/patchwork/notebook/07/&quot;&gt;together with an AI&lt;/a&gt;. I think this is really cool and great example of how AI can be used to edit text that expands it outside the prompt box while still being very text based.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/cli-and-prompts/</guid>
        </item>
        <item>
            <title>The Blunt and Sharp end of AI</title>
            <link>https://rosenqvist.design/blog/blunt-and-sharp-end-of-ai/</link>
            <description>&lt;p&gt;I read two interesting articles the other day. One about how you build personality into AI and the other about hands on experiences building AI products. They sort of complimented each other and also made me think about something i learned back in university when i studied urban resilience.&lt;/p&gt;
&lt;h2&gt;AI personality&lt;/h2&gt;
&lt;p&gt;The first article talks &lt;a href=&quot;https://productify.substack.com/p/ai-models-product-market-fit-and?utm_source=profile&amp;amp;utm_medium=reader2&quot;&gt;about the personality of an AI&lt;/a&gt; and how that can be a selling point in the product market fit. OpenAI is for example more permissive than googles Gemini. This have some guys on twitter up in arms but making a &amp;quot;safe&amp;quot; AI can help attract different kinds of user groups. If a company want a certain tone and to prevent their AI assistant to say controversial stuff you can use Gemini, for others there&#39;s Grok…&lt;/p&gt;
&lt;p&gt;Thinking about how these companies are trying to compete on things other than accuracy, speed, etc. I thought would come later when these technologies are more commodified. Interesting.&lt;/p&gt;
&lt;p&gt;Another things that struck me while reading it is that all of these companies are trying to position themselves to be THE AI service. Their ambition is to become the next platform in AI similar to Google in search, Facebook in socials, or Amazon in sales. right now we have so many options because everyone is trying to make a bet to be the next monopoly. Investors are happy to bet on a dark horse because, if worse comes to worse, they will be acquired.&lt;/p&gt;
&lt;p&gt;There have been laws proposed about AI and what data they are based on and how they are allowed to be used but what we really need to have a discussion about is how to prevent more monopolies (and dismantle the ones we already have).&lt;/p&gt;
&lt;h2&gt;Hands-on advice&lt;/h2&gt;
&lt;p&gt;Going from the boardroom to the shop floor: &lt;a href=&quot;https://maggieappleton.com/squish-structure&quot;&gt;this article is about the learnings during hands on building of AI&lt;/a&gt; products. The discussion in the news is that AI will come in and completely take over. You just feed the AI some input and write a prompt and they do the whole job. This framing reinforces the idea of a big monopoly platform that can do everything (and also AGI, a topic I dont want to touch with a stick).&lt;/p&gt;
&lt;p&gt;One of the key takeaways from the post is that you shouldn&#39;t try to do everything because it will be bad and you will fail. Instead find a narrow use-case and build a tailor made solution powered by AI that is tailor made to make it good. This is so realistic and practical that i was surprised to find it in a post about AI. And, it reflects the thoughts of someone working on the sharp end of AI.&lt;/p&gt;
&lt;h2&gt;Blunt and sharp ends&lt;/h2&gt;
&lt;p&gt;While at university i studied urban resilience and safety and disaster studies. Very interesting topics for people who likes to mix technology, culture, organizations, and education.&lt;/p&gt;
&lt;p&gt;During this i read about the concept of the &amp;quot;sharp and blunt end&amp;quot; of organizations. Let&#39;s say that there is a big accident. The sharp end of that accent will be the ambulance people who come to the scene and pick up people and get them into the hospital. They are hands on, they are under time pressure, and they are working with limited understanding of the overall picture (among many other things).&lt;/p&gt;
&lt;p&gt;On the other side you have the blunt end of the organization. These are the administrators and managers at the hospital, and at the really blunt end you have politicians who allocate budget. Here time move more slowly, you can wait with a decision until the next department meeting.&lt;/p&gt;
&lt;p&gt;The needs and responsibilities are very different between the blunt and sharp end and it feels like we view the AI from a blunt perspective. the details and hands on needs are waved away and instead there are some poorly made studies that simplifies things way too much. Maybe it&#39;s just the sources i read when it comes to AI and I should adjust my media diet.&lt;/p&gt;
&lt;p&gt;I dont really have a point about this other than there were two articles that made me think and an old concept to tie them together. The blunt end/sharp end is also very useful tool when discussing B2B products, just throwing it out there. Give the articles a read.&lt;/p&gt;
</description>
            <pubDate>Sat, 30 Mar 2024 07:00:00 GMT</pubDate>
            <dc:creator>Simon Rosenqvist</dc:creator>
            <guid>https://rosenqvist.design/blog/blunt-and-sharp-end-of-ai/</guid>
        </item>
    </channel>
</rss>